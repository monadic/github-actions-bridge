name: Using Secrets
on: [push, workflow_dispatch]

jobs:
  use-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check for API key
        run: |
          if [ -z "$API_KEY" ]; then
            echo "ERROR: API_KEY secret not set!"
            exit 1
          fi
          echo "API key is configured (length: ${#API_KEY})"
        env:
          API_KEY: ${{ secrets.API_KEY }}
      
      - name: Use database URL
        run: |
          # Don't echo the actual secret!
          if [ -n "$DATABASE_URL" ]; then
            echo "Database URL is configured"
            echo "Protocol: $(echo $DATABASE_URL | cut -d: -f1)"
          else
            echo "WARNING: DATABASE_URL not set"
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      - name: Mock API call
        run: |
          echo "Making API call with authentication..."
          # In real workflow, you'd use the secret for actual API calls
          echo "API Response: Success (mocked)"
        env:
          API_KEY: ${{ secrets.API_KEY }}
          
      - name: Create config file with secrets
        run: |
          # Example of using secrets to create a config file
          cat > config.json << EOF
          {
            "api_endpoint": "https://api.example.com",
            "api_key_configured": true,
            "database_configured": $([ -n "$DATABASE_URL" ] && echo "true" || echo "false")
          }
          EOF
          cat config.json
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}