version: '3.8'

services:
  actions-bridge:
    build: .
    image: confighub/actions-bridge:latest
    container_name: actions-bridge
    restart: unless-stopped
    environment:
      # ConfigHub connection settings
      CONFIGHUB_WORKER_ID: ${CONFIGHUB_WORKER_ID}
      CONFIGHUB_WORKER_SECRET: ${CONFIGHUB_WORKER_SECRET}
      CONFIGHUB_URL: ${CONFIGHUB_URL:-https://api.confighub.com}
      
      # Bridge configuration
      ACTIONS_BRIDGE_BASE_DIR: /var/lib/actions-bridge
      MAX_CONCURRENT_WORKFLOWS: ${MAX_CONCURRENT_WORKFLOWS:-5}
      
      # Act configuration
      ACT_DEFAULT_IMAGE: catthehacker/ubuntu:act-22.04
      ACT_PLATFORM: linux/amd64
      
      # Health check
      HEALTH_ADDR: :8080
      
      # Debug mode
      DEBUG: ${DEBUG:-false}
      
      # Security: Use Docker-in-Docker instead of socket mounting
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: 1
      DOCKER_CERT_PATH: /certs/client
    
    ports:
      - "8080:8080"  # Health check and metrics
    
    volumes:
      # Persistent storage for workspaces
      - actions-bridge-data:/var/lib/actions-bridge
      # Docker TLS certificates
      - docker-certs-client:/certs/client:ro
      # Optional: Mount local workflows for testing
      # - ./test/fixtures/workflows:/workflows:ro
    
    networks:
      - actions-bridge-net
    
    # Security: Remove AppArmor unconfined
    # security_opt:
    #   - apparmor:unconfined
    
    # Drop unnecessary capabilities
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETUID
      - SETGID
    
    # Run as non-root user
    user: "1000:1000"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    
    depends_on:
      - docker

  # Docker-in-Docker service for secure Docker access
  docker:
    image: docker:24-dind
    container_name: actions-bridge-docker
    restart: unless-stopped
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - docker-certs-ca:/certs/ca
      - docker-certs-client:/certs/client
      - docker-data:/var/lib/docker
    networks:
      - actions-bridge-net
    # Limit resources
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: actions-bridge-prometheus
    restart: unless-stopped
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - actions-bridge-net
    # Security hardening
    read_only: true
    user: "65534:65534"  # nobody user
    cap_drop:
      - ALL

volumes:
  actions-bridge-data:
    driver: local
  docker-data:
    driver: local
  docker-certs-ca:
    driver: local
  docker-certs-client:
    driver: local
  prometheus-data:
    driver: local

networks:
  actions-bridge-net:
    driver: bridge